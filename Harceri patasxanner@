1)Լյամբդա-օպերատորը այս նշանն է (->),որը լյամբդա-արտահայտությունը բաժանում է երկու մասի,ձախ հատվածում ընդունվող արգումենտներն են,
իսկ աջ հատվածում մարմինը։
2)Functional Interfaces-ը մեկ աբստրակտ մեթոդ պարունակող ինտերֆեյսն է,որը կարող է պարունակել նաև մի քանի ստատիկ և դեֆոլթ մեթոդներ։
3)Լյամբդա-արտահայտությունները ինիցիալիզացնում են Functional Interfaces-ը։
4)Լյամբդա-արտահայտությունների մարմինը Java-ում լինում է երկու տեսակի;առաջինը տողայինն է,իսկ երկրորդը բլոկայինը։ Երբ արտահայըության 
աջ հատվածում գտնվող մարմինը բաղկացած է լինում մեկ արտահայտությունից այն կոչվում է տողային,իսկ երբ մի քանի արտահայտություն է կատարում 
կոչվում է բլոկային։
5)(n) -> if (n >= 10 && n <= 20)
10)Այո կարելի է օգտագործել,բայց սահմանափակումներով։Եթե մենք ցանկանում ենք օգտագործել լոկալ փոփոխականը լյամբդա-արտահայտության մեջ,
ապա մենք չենք կարող փոփոխել նրա արժեքը։
11)Այո,քանի որ հակարակ դեպքում ծրագիրը կամպիլյացիա չի լինի։
12)Այն թույլ է տալիս հղում կատարել մեթոդին,առանց նրան ինիցիալիզացնելու։
13)Functional Interfaces- պատճեն։
14)
package com.company;

@FunctionalInterface
public interface MyFunc {
    void func();
}

package com.company;

class MyClass {
    static void myStaticMethod() {
        System.out.println("Hello");
    }
}

package com.company;

public class Main {

    public static void main(String[] args) {
        String text;
        myMethod(MyClass::myStaticMethod);
    }

    private static void myMethod(MyFunc func) {
        func.func();
    }
}
15)
